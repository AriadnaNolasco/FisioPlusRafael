-- MySQL Script generated by MySQL Workbench
-- Thu May 15 16:30:14 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `mydb` ;

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
SHOW WARNINGS;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `User` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `User` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `email` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `sexo` ENUM('M', 'F', 'O') NULL,
  `birth_date` DATE NULL,
  `is_admin` TINYINT NOT NULL,
  `created_at` DATETIME NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `email_UNIQUE` ON `User` (`email` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `Notification`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Notification` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `Notification` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `message` VARCHAR(200) NOT NULL,
  `send_time` DATETIME NOT NULL,
  `User_id` INT NOT NULL,
  PRIMARY KEY (`id`, `User_id`),
  CONSTRAINT `fk_Notification_User1`
    FOREIGN KEY (`User_id`)
    REFERENCES `User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_Notification_User1_idx` ON `Notification` (`User_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `Exercise`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Exercise` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `Exercise` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `description` VARCHAR(250) NULL,
  `difficulty_level` ENUM('bajo', 'medio', 'alto') NOT NULL,
  `video_url` VARCHAR(150) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `Treatment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Treatment` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `Treatment` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `description` VARCHAR(250) NULL,
  `created_by_ai` TINYINT NOT NULL,
  `User_id` INT NOT NULL,
  PRIMARY KEY (`id`, `User_id`),
  CONSTRAINT `fk_Treatment_User1`
    FOREIGN KEY (`User_id`)
    REFERENCES `User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_Treatment_User1_idx` ON `Treatment` (`User_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `Schedule`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Schedule` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `Schedule` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `day_of_week` VARCHAR(20) NOT NULL,
  `start_time` TIME NOT NULL,
  `end_time` TIME NOT NULL,
  `User_id` INT NOT NULL,
  PRIMARY KEY (`id`, `User_id`),
  CONSTRAINT `fk_Schedule_User1`
    FOREIGN KEY (`User_id`)
    REFERENCES `User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_Schedule_User1_idx` ON `Schedule` (`User_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `AppointmentRequest`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `AppointmentRequest` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `AppointmentRequest` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `appointment_date` DATE NOT NULL,
  `appointment_time` TIME NOT NULL,
  `status` ENUM('pendiente', 'aceptada', 'rechazada') NOT NULL,
  `comments` VARCHAR(250) NULL,
  `User_id` INT NOT NULL,
  PRIMARY KEY (`id`, `User_id`),
  CONSTRAINT `fk_AppointmentRequest_User1`
    FOREIGN KEY (`User_id`)
    REFERENCES `User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_AppointmentRequest_User1_idx` ON `AppointmentRequest` (`User_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `ChatMessage`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ChatMessage` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `ChatMessage` (
  `idChatMessage` INT NOT NULL AUTO_INCREMENT,
  `message` VARCHAR(300) NOT NULL,
  `response` VARCHAR(300) NULL,
  `timestamp` DATETIME NOT NULL,
  `User_id` INT NOT NULL,
  PRIMARY KEY (`idChatMessage`, `User_id`),
  CONSTRAINT `fk_ChatMessage_User1`
    FOREIGN KEY (`User_id`)
    REFERENCES `User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_ChatMessage_User1_idx` ON `ChatMessage` (`User_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `VirtualAssistantGuide`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `VirtualAssistantGuide` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `VirtualAssistantGuide` (
  `idVirtualAssistantGuide` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(100) NOT NULL,
  `description` VARCHAR(250) NULL,
  `image_url` VARCHAR(200) NULL,
  PRIMARY KEY (`idVirtualAssistantGuide`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `MonitoringSession`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `MonitoringSession` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `MonitoringSession` (
  `idMonitoringSession` INT NOT NULL AUTO_INCREMENT,
  `start_time` DATETIME NOT NULL,
  `end_time` DATETIME NOT NULL,
  `success_rate` DECIMAL(5,2) NULL,
  `feedback` VARCHAR(150) NULL,
  `User_id` INT NOT NULL,
  `Exercise_id` INT NOT NULL,
  PRIMARY KEY (`idMonitoringSession`, `User_id`, `Exercise_id`),
  CONSTRAINT `fk_MonitoringSession_User1`
    FOREIGN KEY (`User_id`)
    REFERENCES `User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_MonitoringSession_Exercise1`
    FOREIGN KEY (`Exercise_id`)
    REFERENCES `Exercise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_MonitoringSession_User1_idx` ON `MonitoringSession` (`User_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_MonitoringSession_Exercise1_idx` ON `MonitoringSession` (`Exercise_id` ASC) VISIBLE;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `Treatment_Exercise`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Treatment_Exercise` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `Treatment_Exercise` (
  `Treatment_id` INT NOT NULL,
  `Treatment_User_id` INT NOT NULL,
  `Exercise_id` INT NOT NULL,
  PRIMARY KEY (`Treatment_id`, `Treatment_User_id`, `Exercise_id`),
  CONSTRAINT `fk_Treatment_has_Exercise_Treatment1`
    FOREIGN KEY (`Treatment_id` , `Treatment_User_id`)
    REFERENCES `Treatment` (`id` , `User_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Treatment_has_Exercise_Exercise1`
    FOREIGN KEY (`Exercise_id`)
    REFERENCES `Exercise` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `fk_Treatment_has_Exercise_Exercise1_idx` ON `Treatment_Exercise` (`Exercise_id` ASC) VISIBLE;

SHOW WARNINGS;
CREATE INDEX `fk_Treatment_has_Exercise_Treatment1_idx` ON `Treatment_Exercise` (`Treatment_id` ASC, `Treatment_User_id` ASC) VISIBLE;

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
